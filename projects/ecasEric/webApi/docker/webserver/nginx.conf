events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  upstream nodejs {
          server localhost:4078;
  }

  server {
        listen 80;
        server_name _;
        large_client_header_buffers 4 32k;

        client_max_body_size 256M;
        return         301 https://$server_name$request_uri;
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;

    large_client_header_buffers 4 32k;

    client_max_body_size 256M;

    ssl_certificate /root/bundle.pem;
    ssl_certificate_key /root/private.pem;

    root /home/node/app/webApp/dist;
    index index.html;

    # Basic Authentication Setup
    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/.htpasswd;  # This assumes the .htpasswd file must be present

    location /api/ {
        auth_basic off;
        proxy_set_header Host $http_host;
        proxy_pass http://nodejs;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;

        # WebSocket specific
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
    }

    location ^~ /ws {                        # ‚Üê match exactly what the SPA calls
        auth_basic off;                     # WebSocket cannot respond to 401
        proxy_pass         http://nodejs;   # upstream you already defined
        proxy_http_version 1.1;             # mandatory for websockets
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location / {
      try_files $uri $uri/ /index.html;
    }

    # Disable caching for the SPA entry point
    location = /index.html {
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }

    location ^~ /public/storage/ {
      expires 365d;
      add_header Cache-Control "public";
    }
  }
}
